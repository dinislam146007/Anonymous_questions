import telebot
from telebot import types
import re
import sqlite3

bot_token = ''
my_user_id = None
bot = telebot.TeleBot(bot_token)
@bot.message_handler(commands=['start'])
def start(message):
    global my_user_id
    user_id = message.text.split(' ')[1] if len(message.text.split(' ')) > 1 else None
    bot.send_message(message.chat.id, f('{user_id}')
    markup1 = types.InlineKeyboardMarkup()

    connection = sqlite3.connect('anonka.sql')
    cursor = connection.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (my_id INTEGER, user_id INTEGER)''')
    cursor.execute("INSERT OR IGNORE INTO users (my_id) VALUES ('%s')" % (message.chat.id))
    #user_id = message.text.split(' ')[1] if len(message.text.split(' ')) > 1 else None
    #cursor.execute("UPDATE users SET user_id = %s WHERE my_id = %s" % (user_id, message.chat.id))
    if user_id is not None:
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        cursor.execute("UPDATE users SET user_id = ? WHERE my_id = ?", (user_id, message.chat.id))
    connection.commit()
    cursor.close()
    connection.close()
    my_user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∞–Ω–æ–Ω–∏–º–Ω–æ")
    btn3 = types.KeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ùì')
    btn4 = types.KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ')
    markup.row(btn1)
    markup.row(btn3)
    markup.row(btn4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç—ã —É–∂–µ –ø–æ–Ω—è–ª —ç—Ç–æ –±–æ—Ç –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. \n–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:http://t.me/anonka_vopros_bot?start={message.chat.id}\n/help - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è.\n –ù–µ–º–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏: –∑–∞–ø—É—Å–∫–∞—è –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞, —Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º, –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –æ–¥–Ω–æ–∏–º–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É. \n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫üíª', reply_markup=markup)
    #bot.send_message(message.chat.id, '–°–ø–æ–Ω—Å–æ—Ä—ã', reply_markup=markup1, )
    if user_id is not None:
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –ª—é–±–æ–µ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É!')



@bot.message_handler(func=lambda message: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ùì' in message.text)
def idea(message):
    my_id = 
    markup = types.ForceReply(selective=False)  # –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–ø–ª–∞–∏ (–ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∏–¥–µ—é, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É", reply_markup=markup)

    def my_question(message):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'programmer:{message.text}:{message.chat.id}'))
        bot.send_message(my_id, f'–í–æ–ø—Ä–æ—Å —Ä–∞–∑—Ä–∞–±—É: \n{message.text}', reply_markup=markup)
        bot.send_message(message.chat.id, '‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!')

    bot.register_next_step_handler(message, my_question)
@bot.message_handler(func=lambda message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ' in message.text)
def sogl(message):
    bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ:\n –î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö. –ó–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ª—é–¥–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–µ—Å—ë—Ç –Ω–∏–∫–∞–∫–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–≤—Ç–æ—Ä–∞–º —Å–æ–æ–±—â–µ–Ω–∏–π. –ü—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º, —Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ. –ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –µ–≥–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä—É–π –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω—å —Å –Ω–∏–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!\n –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å: –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –∞–Ω–æ–Ω–∏–º–Ω–æ, –∏ —Ç–≤–æ—ë –∏–º—è –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è.\n –£–≤–∞–∂–µ–Ω–∏–µ: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–≤–∞–∂–∞–π –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–µ, —É–≥—Ä–æ–∂–∞—é—â–∏–µ, –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã–µ –∏–ª–∏ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –±–æ—Ç.\n –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å: –ê–≤—Ç–æ—Ä –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞ –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ò –Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤.\n –°–æ–≥–ª–∞—Å–∏–µ: –ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ—Ç –±–æ—Ç, —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –æ–±—è–∑—É–µ—à—å—Å—è —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞.\n –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: –ù–µ –¥–µ–ª–∏—Å—å –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–±–µ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –≤ —ç—Ç–æ–º –±–æ—Ç–µ. –ü–æ–º–Ω–∏, —á—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å - —ç—Ç–æ –∫–ª—é—á–µ–≤–∞—è —á–∞—Å—Ç—å –æ–ø—ã—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –≤—ã –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω—ã —Å –Ω–∞—Å—Ç–æ—è—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –µ–≥–æ —É—Å–ª–æ–≤–∏—è–º–∏.')
@bot.message_handler(commands=['help'])
def helper(message):
    bot.send_message(message.chat.id, '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –±–æ—Ç–∞ –ê–Ω–æ–Ω–∏–º–Ω—ã—Ö –í–æ–ø—Ä–æ—Å–æ–≤ \n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ê–Ω–æ–Ω–∏–º–Ω—ã—Ö –í–æ–ø—Ä–æ—Å–æ–≤! –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º Telegram. –ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ—á—Ç–∏ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:\n ID - —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–ª–∏ –æ–±—ä–µ–∫—Ç—É –≤ —Å–∏—Å—Ç–µ–º–µ. –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±–æ—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ID –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–æ—Ç—É –∑–Ω–∞—Ç—å, –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫—É–¥–∞ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ü–æ —Å—É—Ç–∏, —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ª–∏—á–∞–µ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –±–æ—Ç—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫ –∫–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ.\n P.S ID —ç—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ @, —ç—Ç–æ –¥–µ—Å—è—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–∏—Ñ—Ä. \n 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—á–∞–ª–æ:\n –ù–∞—á–Ω–∏ –±–µ—Å–µ–¥—É —Å –±–æ—Ç–æ–º, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /start.\n –ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏: "–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∞–Ω–æ–Ω–∏–º–Ω–æ", "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ùì".\n 2. –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID:\n –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∞–Ω–æ–Ω–∏–º–Ω–æ". –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –≤ Telegram.\n 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è:\n –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ id üÜî". –í–≤–µ–¥–∏ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å.\n 4. –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É:\n –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ùì". –í–≤–µ–¥–∏ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.\n 5. –û—Ç–ø—Ä–∞–≤–∫–∞ –ê–Ω–æ–Ω–∏–º–Ω—ã—Ö –í–æ–ø—Ä–æ—Å–æ–≤:\n –ï—Å–ª–∏ —Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É.\n –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—é –∞–Ω–æ–Ω–∏–º–Ω–æ, –∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–µ–±–µ.\n 6. –û—Ç–≤–µ—Ç –Ω–∞ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –í–æ–ø—Ä–æ—Å:\n –ï—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å, —Ç–æ —Å–º–æ–∂–µ—à—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ, –Ω–∞–∂–∞–≤ "–û—Ç–≤–µ—Ç–∏—Ç—å ‚úçÔ∏è".\n –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é –∞–Ω–æ–Ω–∏–º–Ω–æ.\n –° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üíª')
@bot.message_handler(func=lambda message: '–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∞–Ω–æ–Ω–∏–º–Ω–æ' in message.text)
def handle_message(message):
    markup = types.ReplyKeyboardMarkup()
    markup.row(types.KeyboardButton('‚úçÔ∏è –í–≤–µ—Å—Ç–∏ id üÜî'))
    bot.send_message(message.chat.id, f'–¢–≤–æ–π id:{message.chat.id}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å id –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ—à–ª–∏ —Å—é–¥–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò–ª–∏ –≤–≤–µ–¥–∏ id –µ—Å–ª–∏ –∑–Ω–∞–µ—à—å. –ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=markup)
@bot.message_handler(func=lambda message: '‚úçÔ∏è –í–≤–µ—Å—Ç–∏ id üÜî' in message.text)
def input_id(message):
    markup = types.ForceReply(selective=False)  # –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–ø–ª–∞–∏ (–ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ '–û—Ç–º–µ–Ω–∞' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞:", reply_markup=markup)

    def is_valid_number(text):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä –∏ –∏–º–µ–µ—Ç –¥–ª–∏–Ω—É 10 —Å–∏–º–≤–æ–ª–æ–≤
        return bool(re.match(r'^\d{10}$', text))

    def handle_text_input(message):
        if message.text == str(message.chat.id):
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ id –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤–≤–µ–¥–∏ "–û—Ç–º–µ–Ω–∞"', reply_markup=markup)
            bot.register_next_step_handler(message, handle_text_input)  # –û–∂–∏–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        elif is_valid_number(message.text) and message.text != str(my_user_id):
            bot.reply_to(message, '‚úÖid —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ‚úÖ. \n–¢–µ–ø–µ—Ä—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –º–Ω–µ, –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–Ω–æ–Ω–∏–º–Ω–æ!')
            connection = sqlite3.connect('anonka.sql')
            cursor = connection.cursor()
            cursor.execute("UPDATE users SET user_id = %s WHERE my_id = %s" % (message.text, message.chat.id))
            connection.commit()
            cursor.close()
            connection.close()
        elif message.text == '–û—Ç–º–µ–Ω–∞':
            pass
        else:
            bot.send_message(message.chat.id, 'üî¥ –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id', reply_markup=markup)
            bot.register_next_step_handler(message, handle_text_input)  # –û–∂–∏–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(message, handle_text_input)  # –û–∂–∏–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.forward_from is not None)
def handle_forwarded_message(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å id', callback_data=f'forward_id:{message.forward_from.id}:{message.chat.id}'))
    bot.send_message(message.chat.id, f'ID –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.forward_from.id}', reply_markup=markup)
@bot.message_handler()
def send(message):
    markup = types.InlineKeyboardMarkup()
    def get_user_id_by_my_id():
        connection = sqlite3.connect('anonka.sql')
        cursor = connection.cursor()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—å —Å –∑–∞–¥–∞–Ω–Ω—ã–º my_id
        cursor.execute("SELECT user_id FROM users WHERE my_id=?", (message.chat.id,))
        result = cursor.fetchone()
        connection.close()
        return result[0] if result else None
      # –ü–æ–ª—É—á–∞–µ–º user_id –∑–¥–µ—Å—å
    user = get_user_id_by_my_id()
    markup.add(types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å ‚úçÔ∏è', callback_data=f'otvet:{get_user_id_by_my_id()}:{message.text}:{message.chat.id}'))
    if user is None:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    elif user == message.chat.id:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ id –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    else:
        try:
            bot.send_message(int(user), f'üü¢–ù–æ–≤—ã–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å: \n{message.text}', reply_markup=markup)
            bot.send_message(message.chat.id, '‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ‚úÖ')
        except telebot.apihelper.ApiTelegramException as e:
            error_message = str(e)
            if "Forbidden: bot can't initiate conversation with a user" in error_message:
                # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                bot.send_message(message.chat.id, "‚ùå –Ø –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª –º–µ–Ω—è. \n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –µ—ë —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –∏ –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!")
            else:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
                bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚ùå")
@bot.callback_query_handler(func=lambda call: call.data.startswith('otvet'))
def answer(call):
    # vopros = call.data.split(':')[2]
    # ser = call.data.split(':')[1]
    markup = types.ForceReply(selective=False)
    bot.send_message(call.data.split(':')[1], f'–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n{call.data.split(":")[2]}', reply_markup=markup)
    def handle_text_input(message):
        markup1 = types.InlineKeyboardMarkup()
        markup1.add(types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å ‚úçÔ∏è',
                                              callback_data=f'answer:{call.data.split(":")[3]}:{message.text}:{message.chat.id}'))

        bot.send_message(call.data.split(':')[3], f'‚ùì –í–æ–ø—Ä–æ—Å:\n{call.data.split(":")[2]} \nüí¨ –û—Ç–≤–µ—Ç: \n{message.text}', reply_markup=markup1)
        bot.send_message(message.chat.id, '‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ‚úÖ')
    bot.register_next_step_handler(call.message, handle_text_input)
@bot.callback_query_handler(func=lambda call: call.data.startswith('forward_id'))
def forward(call):
    user_id = call.data.split(':')[1]
    my = call.data.split(':')[2]
    bot.send_message(my, '‚úÖ id —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!‚úÖ \n –¢–µ–ø–µ—Ä—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É, –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –∞–Ω–æ–Ω–∏–º–Ω–æ')
    connection = sqlite3.connect('anonka.sql')
    cursor = connection.cursor()
    cursor.execute("UPDATE users SET user_id = %s WHERE my_id = %s" % (call.data.split(':')[1], call.data.split(':')[2]))
    connection.commit()
    cursor.close()
    connection.close()
@bot.callback_query_handler(func=lambda call: call.data.startswith('programmer'))
def answer(call):
    markup = types.ForceReply(selective=False)
    bot.send_message(1027971912, f'–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n{call.data.split(":")[1]}', reply_markup=markup)
    def handle_text_input(message):
        bot.send_message(call.data.split(':')[2], f'‚ùì –í–æ–ø—Ä–æ—Å —Ä–∞–∑—Ä–∞–±—É:\n{call.data.split(":")[1]} \nüí¨ –û—Ç–≤–µ—Ç: \n{message.text}')
    bot.register_next_step_handler(call.message, handle_text_input)
@bot.callback_query_handler(func=lambda call: call.data.startswith('answer'))
def answer(call):
    # vopros = call.data.split(':')[2]
    # ser = call.data.split(':')[1]
    markup = types.ForceReply(selective=False)
    bot.send_message(call.data.split(':')[1], f'–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n{call.data.split(":")[2]}', reply_markup=markup)
    def handle_text_input(message):
        markup1 = types.InlineKeyboardMarkup()
        markup1.add(types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å ‚úçÔ∏è',
                                              callback_data=f'otvet:{call.data.split(":")[3]}:{message.text}:{message.chat.id}'))
        bot.send_message(message.chat.id, '‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ‚úÖ')
        bot.send_message(call.data.split(':')[3], f'‚ùì –í–æ–ø—Ä–æ—Å:\n{call.data.split(":")[2]} \nüí¨ –û—Ç–≤–µ—Ç: \n{message.text}', reply_markup=markup1)
    bot.register_next_step_handler(call.message, handle_text_input)
bot.infinity_polling()
